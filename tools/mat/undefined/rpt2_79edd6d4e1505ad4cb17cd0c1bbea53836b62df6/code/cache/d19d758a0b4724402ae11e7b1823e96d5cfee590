{"code":"export default class Vector {\r\n    list;\r\n    constructor(list = []) {\r\n        this.list = list;\r\n    }\r\n    getDimension() {\r\n        return this.list.length;\r\n    }\r\n    len = this.getDimension();\r\n    getItem(index) {\r\n        return this.list[index];\r\n    }\r\n    add(another) {\r\n        if (this.getDimension() === another.getDimension()) {\r\n            const finalList = [];\r\n            for (let i = 0; i < this.getDimension(); i++) {\r\n                finalList.push(this.getItem(i) + another.getItem(i));\r\n            }\r\n            return new Vector(finalList);\r\n        }\r\n        else {\r\n            return '维度不相等，无法进行加法运算';\r\n        }\r\n    }\r\n    sub(another) {\r\n        if (this.getDimension() === another.getDimension()) {\r\n            const finalList = [];\r\n            for (let i = 0; i < this.getDimension(); i++) {\r\n                finalList.push(this.getItem(i) - another.getItem(i));\r\n            }\r\n            return new Vector(finalList);\r\n        }\r\n        else {\r\n            return '维度不相等，无法进行减法运算';\r\n        }\r\n    }\r\n    mul(K) {\r\n        const finalList = [];\r\n        for (let i = 0; i < this.getDimension(); i++) {\r\n            finalList.push(this.getItem(i) * K);\r\n        }\r\n        return new Vector(finalList);\r\n    }\r\n    pos() {\r\n        return this.mul(1);\r\n    }\r\n    neg() {\r\n        return this.mul(-1);\r\n    }\r\n    norm() {\r\n        let sum = 0;\r\n        for (let i = 0; i < this.getDimension(); i++) {\r\n            sum += this.getItem(i) ** 2;\r\n        }\r\n        return Math.sqrt(sum);\r\n    }\r\n    normalize() {\r\n        const finalList = [];\r\n        const norm = this.norm();\r\n        if (norm === 0) {\r\n            throw '向量的模不能为0';\r\n        }\r\n        for (let i = 0; i < this.getDimension(); i++) {\r\n            finalList.push(this.getItem(i) / norm);\r\n        }\r\n        return new Vector(finalList);\r\n    }\r\n    dotMul(another) {\r\n        if (another.getDimension() === this.getDimension()) {\r\n            let final = 0;\r\n            for (let i = 0; i < this.getDimension(); i++) {\r\n                final += this.getItem(i) * another.getItem(i);\r\n            }\r\n            return final;\r\n        }\r\n        else {\r\n            console.log('两个向量点乘时其维度必须相等');\r\n        }\r\n    }\r\n    static zero(dim) {\r\n        return new Vector(new Array(dim).fill(0));\r\n    }\r\n    toStr() {\r\n        let str = ``;\r\n        for (let i = 0; i < this.list.length; i++) {\r\n            if (i !== this.list.length - 1) {\r\n                str += `${this.list[i]},`;\r\n            }\r\n            else {\r\n                str += this.list[i];\r\n            }\r\n        }\r\n        return `Vector(${str})`;\r\n    }\r\n}\r\n","references":[]}
